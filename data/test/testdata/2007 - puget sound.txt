1.One of the fundamental tasks of the system is to allow actors to upload and manage files on certain pages of the system. These might include assignment submission pages, forum pages, wiki pages, and announcement pages.
An actor in the role of course administrator should be able to optionally upload multiple files where An actor in the role of course administrator or An actor in the role of course administrator finds that such as feature would be usefulâ€”such as on a devoted project page.
2.Actors in the capacity of course administrator or professor should be able to enable multiple file uploads on a page of professor or her choosing. For collaborative projects, it becomes important for actors to be able to upload more than one file to a given page, especially in the case of an assignment submission where the assignment might include multiple parts. Such a construct should be offered to the actor during a page's creation and editing stages.
3.One of the shortcomings of the current courseware system is that the foreign language department is unable to capture and track voice clips recorded by students for oral homework over the course of a student's education.
4.Equal and finite drive space needs to be allotted to each actor in the role of professor or administrator to allow for the storing of voice clips recorded and submitted by all actors in the roles of students.
Actors in the role of professor or system administrator should be allowed to partition this space for actors in the roles of students. This can be done one of two ways: 1) the actor can be allowed to preview the voice clip before This is archived and determine whether or not the actor or the actor would like the voice clip to be archived, or 2) a newly created voice clip can be automatically archived. The first option would allow the actor to throw out an audio clip that is deemed to be unsuitable or inappropriate for an assignment without having to take The first option out of an archive of voice clips. the actor should have the option to have the voice clip be archived after a preview has taken place. The second option would automatically archive a voice clip once submitted but would require that the actor interact with the archived file. Thus, if the actor chooses to delete the file, the actor chooses to delete the file would need to be deleted from the archive of voice clips.
5.Maintaining an archive of voice clips makes it possible for comparisons to be made between clips to determine whether an actor is improving an actor or an actor language skills over multiple courses.
an actor should be able to optionally attach one of an actor or an actor archived items to any page where uploads are permitted.
6.Voice clips should be optionally downloadable in a format such as MPEG Audio (mp3) format, since MPEG is widely supported across different web browsers and operating systems.
Voice clips should be downloadable for archival purposes or for the purpose of presenting Voice clips to other actors.
7.Voice clips should be stored in a format optimized for speech since this feature is meant to catalog voice recordings.
Recordings should only be converted to MPEG Audio (mp3) format when Recordings are being downloaded; a separate viewer should be provided in a cross-platform language for listening to clips in Moodle.
8.Since voice clips should be stored in a portfolio for each actor during each actor or each actor existence in the course management system, each actor or each actor should be able to examine each actor or each actor portfolio to select and delete clips if he or she chooses to. This allows each actor or each actor to manage archived voice clips and to create a cohesive portfolio that actors in the role of professor can use to judge improvement over time.
9.The system must be able to display web feeds, such as RSS 2 feeds, for all pages of the course management system where elements such as forum posts, assignment postings, announcements, wiki alterations and other blocks of information that an actor may view are added. Actors in the role of course administrators should have the ability to determine which of these components have feeds and to whom these feeds should pertain.
10.If actors are unable to be notified in some way of new content in Moodle, actors are unable to efficiently keep track of a course's current affairs. For this requirement, page refers to any distinct block (eg, assignments, wikis, forum threads, etc).
11.Actors in the course administrator role may not feel the need to provide web feeds for every page in their course. During the creation and editing of a page, that actor should be able to toggle web feed availability.
12.The system must be able to use search functionality as a way to navigate Moodle pages instead of using hierarchical links.
13.Moodle can be difficult to navigate and requires too many clicks to be efficiently used. Too many steps to complete basic actions such as submitting an assignment lead to frustration on the part of the actor. A search utility enables actors to find what actors are looking for quickly in addition to having a hierarchical approach to finding functions of the course management system. For this requirement, page refers to any distinct page, such as an assignment, a wiki page, or a forum post.
14.Actors should be able to search for pages at the course level, since most actors will be searching for material in a given course. The search feature should be present in two ways. 15.First, it should be present in the form of a search box and a 'Search' button on the top or bottom of every page. More information on this topic is given in sub-section 3 below. 16.Second, a single page should be dedicated specifically to the task of searching the course management system.
In addition to the basic search field, a single page should allow an actor to filter out certain results (such as forum posts or grades, etc) and search specific sections (or components) of the course management system. Results should appear in categories (eg, Assignments, Wiki Pages, Forum Posts, etc) based on relevance. In this case, relevance is determined by results that having the highest number terms matching the search terms. When an actor clicks a search result link, they should be taken to the page corresponding to the search result.
17.In addition, the search page described above might allow for the possibility of searching the world wide web using a standard search engine such as Google.
18.Actors should be able to search from any page. If the actor is hierarchically outside of a particular course, each of the actor or the actor courses should be searched and results should be grouped by course. If the actor is hierarchically inside of a course, a course should be searched with an option to search all courses.
19.The system must allow actors in the capacity of course administrator to post grades associated with assignments for a particular actor in the capacity of student.
Actors in the role of professor may want to optionally grade assignments online since Actors in the role of professor are being submitted electronically by actors in the role of student.
20.Course administrators should be able to post grades for an assignment based on the ratio of points earned to points possible. The course administrator should also be able to attach feedback in the form of text or an attachment (as described above). Time stamps should be attached to the last time the grade was modified so that actors may examine when particular grades were submitted and how an actor in the role of student has improved or lessened student performance in the course.
21.The system should display grade information such as the grade for each assignment, averages, and overall grade to the actor to whom the grades belong.
No other actor should be able to view another's grades except an actor in the role of course administrator for the course to which the grades belong.
22.The system should maintain a history of grades for a particular assignment if the course administrator changes a particular assignment. This way, another actor can review the grade information if another actor score on an assignment has changed and another actor wish to dispute it.
Course administrators can also track how Course administrators have changed a score over time using the timestamps associated with each change to the gradebook.
23.The social, collaborative components of Moodle are not very robust. There are better, freelyavailable solutions which should be integrated into Moodle to provide the best functionality possible for all actors without having to use 3rd party services.
24.A freely available wiki should provide a simple markup language that actors can use to style actors input, as well as link to other pages in the wiki. More importantly, having the wiki inside Moodle reduces confusion and allows for the integration of notifications and logins.
25.A freely available blog engine should provide all modern blog functionality, such as tagging, drafting, and comments. These blogs should share authentication and notification with Moodle.
26.Currently, there is no system that allows actors to receive SMS or email notifications of changes to Moodle pages (such as assignments or announcements).
27.For this requirement, page refers to any distinct page (eg, an assignment, a wiki page, a forum post, etc). When a page is created, the actor in the role of course administrator should be able to toggle whether notifications are turned on. By default, notifications are turned on should be turned on for announcements. If notifications are turned off, actors in the capacity of student should be able to subscribe to notifications.
28.Students should be able to select in their preferences whether notifications are sent to their mobile telephone (via SMS) or e-mail account. their should also be able to manage their notification subscriptions (for example, remove their from notifications).
29.Although any courseware solution may be composed of diverse systems, applications, and processes, the underlying architecture should be transparent to the administrators.
The system should be configurable from a single source at a central administrative position, and should provide a central, easy-to-use interface that will allow administrators to configure the user interface and features in a way that reduces page clutter.
30.A system will be considered to meet this requirement if system has a single administrative interface rather than individual links for editing each page. Furthermore, this interface must allow administrators to easily change themes and other setting that affect page layout across the entire courseware system.
31.Back-up requirements will need to be determined, based on individual components of the system.
the system should be backed up with a frequency that ensures system and course data is protected. Since assignments will be submitted via the system, the system should be backed up on a nightly basis, with options for weekly, off-site backup when necessary.
32.The system must have the ability and capacity to restore back-up data within six hours so that system is never offline for an inordinate period of time.
33.This statement provides a general sense of system availability. It is not intended to demand the system maintain reliability, or to require the system to be highly available. It should not exclude maintenance windows, or scheduled downtime. It is only intended to convey the expectation that our customers should have access to the system during off-hours as well as business hours. 99% up-time should be considered sufficient to meet this requirement.
34.This statement provides a general sense of reliability when the system is under load. the system is important that a substantial number of actors be able to access the system at the same time, since a courseware system is important to the courses that employ a courseware system. The times when the system will be under the most stress are likely during midterm and finals weeks. Therefore, it must be able to handle at least 1,000 concurrent users.
35.Due to limited staff in the Office of Information Services, it is important that the system be mostly self-sustaining. This will reduce the number of FTE hours spent maintaining the system and simplify maintenance tasks.
36.Users must have easy access to help while interacting with the system.
Adequate user documentation should be provided to minimize the number of calls to the Help Desk about problems with the system.
Modifications should be reported via the main page to inform actors of unexpected changes.
This electronic documentation should be supplemented with phone and on-site support provided by the Office of Information Services.
37.A comprehensive database of maintenance tasks and help files should be compiled to make the courseware system easier to maintain from an IT staff point-of-view. Search results should be displayed based on relevance.
38.This documentation must cover all procedures necessary for regular maintenance with links to additional information, all common errors, and links or documentation for advanced troubleshooting.
