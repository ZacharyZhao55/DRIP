1.Control information must be transferred, typically in the form of commands and replies from users, to telescope and instruments.
Replies might contain status information and, in general, data concerning instruments and telescopes, to be stored together with the astronomical data.
2.Control information on all controlled variables must be provided by all subsystems on request.
No request for information shall produce a delay of control activities or locking, even if the corresponding equipment is not available or faulty.
3.Delay times for the exchange of control information must stay within precise time limits to be defined in 'General Description' in Chapter 2.
One can afford to retransmit commands in case of transmission error or collision, but the protocol has to be predictable in that commands cannot get lost and replies have to come back reliably.
4.Detector data must be acquired and stored in the most effective way technology will allow; effectiveness should be evaluated in terms of cost, space requirements, longevity, and speed. This shall lead to the definition of a Gemini 8m Telescopes standard, used on all instruments. In general, operational overheads must be kept as low as possible, to maximize actual observing times.
5.Intermediate storage of raw data in memory on different nodes and in different formats should be kept to a minimum. However, there must be at least two copies - one to secure data as acquired and one to do assessment of data quality on-line (this last copy preferably on removable media).
6.The link chosen to transfer data should represent as small a bottleneck as possible for data acquisition.
7.Normally, raw data will be acquired and stored as such for quick look evaluations. There might, however, be cases (for example, infrared detectors) where fast preprocessing is needed and where, therefore, raw data will not be stored as such, but in a preprocessed format.
8.Astronomical data will have to be transported between GEMINI and the home institutes of visiting astronomers in FITS format (as defined by NOST 100-1-0, 'Definition of the Flexible Image Transport System (FITS)', NASA Science Office of Standards and Technology).
9.TV data concerning site monitoring and voice need to be capable of being available at all operations facilities. It will be a question of interfacing and bandwidth costs whether such information is actually available at a specific location.
It is not a requirement that point to point video be available between Gemini 8m Telescopes operations facilities.
It is a requirement that voice connectivity, perhaps point to point, be available on a permanent connection.
10.Other astronomical information such as that coming from sky field monitors, autoguider cameras and sky monitoring devices such as cloud and seeing monitors shall also be capable of being available.
11.Operation of telescope, instruments and subsystems can be carried out at three different levels. There will be parameters associated with each level of operation which define the status of the system and / or control the system. The specific access by different types of users to particular parameters of the different levels are given in Section on page 2- 5.
12.This is the normal operational mode. the normal operational mode allows a certain number of embedded tests, normally at a fairly high level. Monitoring is also done at this level.
13.It is anticipated that all user categories have access to this level.
14.This allows maintenance tables (for example, with instrument parameters) to be updated.
15.It is anticipated that the majority of parameters at this level will be accessed by operations and development staff.
16.This allows the installation and testing of new packages or new releases.
Any low level test can be performed in this mode.
It shall be possible to update all non-protected parameter values,  those not used by operations at observing level.
Access to this level will be extremely limited.
17.A further subdivision within the levels can be achieved by implementing privileges associated with categories of users or with the location of the user station (local or remote). For example some users might only be allowed monitoring, as a subsystem is in use by someone else.
18.Protections must also be enforced (see also Security in Section on page 3- 20) among users and the operational software should indicate clearly to users the current operation level and check the compatibility between subsystems in different modes.
19.The capacity of the system can be expressed in terms of nodes, which is defined as the number of workstations, or in terms of users, which is defined as the sum total of users at all the nodes. The capacity requirements will be expressed in terms of nodes.
20.Each node will have the capability to run at all operation levels.
21.When the Gemini 8m Telescopes telescope is used in the Gemini 8m Telescopes telescope normal observing mode, there will be a single operator node for the telescope and two data acquisition and instrument control nodes.
22.Some tests might be run in parallel on instruments that do not have the light beam at that moment, so in principle additional nodes might be working at the same time.
principle will provide for one auxiliary data acquisition and instrument control nodes.
23.In addition, the system must support off-site observing modes.
the system will provide for a single off-site data acquisition and instrument control node - to be located at either the Gemini 8m Telescopes Site Support or Base Facility.
24.One supervisor will monitor the system, and other users might need to monitor the running of observing programs, locally or remotely.
the system will provide for a single local monitoring node and a single remote monitoring node.
25.As a conclusion, the Gemini 8m Telescopes control software shall allow simultaneous operation of up to six active control nodes and up to two more monitoring nodes (one local and one remote) without appreciable degradation of performance.
26.In practice the operation and facilities foreseen so far for the Gemini 8m Telescopes will limit this number to a maximum in the order of three active nodes, but the Gemini 8m Telescopes computers and software shall be capable of coping with the load of 10 active nodes, should the case arise.
27.There must be automatic procedures to implement startup and shutdown of the telescope and instruments. These must allow startup and shutdown of instruments independently of the telescope and instruments and without affecting the telescope operation.
28.Reconfiguration procedures must exist, to change the observing environment.
29.The definition of the observing environments must be dynamic,  feasible during operations without the need to restart everything. The same applies to the related light path.
30.Operations staff have privileges to change the environment, meaning selecting a suitable combination of instruments.
31.The user interface defines the way users see the Gemini 8m Telescopes system. Given the large number of instruments, there can be many different stations which are active at the same time. It is essential for operational and maintenance reasons that, in spite of the obvious differences of the setups and commands available, the same philosophy is applied throughout. This calls for a homogeneous user interface, which can be achieved only by applying the same user interface tools to the whole project, providing the Gemini 8m Telescopes user interface's 'look and feel'.
32.The user interface should not be seen as a package linked to a specific computer. Given the requirement to be able to access the Gemini 8m Telescopes from several points, the user interface should rather be seen as a package to be callable from a large number of stations, depending on where a user is. a package should also be network transparent so that a package does not matter where it is being run.
33.The user interface tools shall be based on standards, defined in Section on page 4- 7, which will be portable across different computer hardware platforms (Portable User Interface Toolkit). The intent of a portability requirement is to facilitate migrating existing and future Gemini systems to different hardware as the need arises. It is the current intent to limit the selection of computer hardware platforms to as few as is practical.
34.The existence of hardware standards is clearly essential for maintenance and repairs.
It is also essential to avoid software duplication, and to simplify the Gemini 8m Telescopes software. Microprocessor software in particular tends to contain hardware specific software, though one should try to keep Microprocessor software in particular as hardware independent as possible, isolating different software layers.
35.The standard software must be adequate for the real-time requirements and must offer drivers to the standard electronics to be used on all the Gemini 8m Telescopes software subsystems and instruments.
36.The Gemini 8m Telescopes software must interface to the external software and clearly the interfaces are fully part of the Gemini 8m Telescopes software.
37.In order to make efficient use of the telescope, to support different observing modes, and to support the versatility requirements, some form of on-line image (or pixel) quick-look analysis is required. The following statements are proposed: 'It shall be possible to monitor the quality (image quality, spectral resolution, signal to noise, ) of the astronomical data as It comes in. Standard reduction procedures should be available for basic on-line calibrations of the observed data. Ultimately, one would like to have fully reduced and calibrated data at the end of the observations. Advanced pipeline procedures might make this feasible, at least for observations of a standard nature.
38.The above statements define the goal of quick-look analysis for the Gemini 8m Telescopes.
39.Quick-look data processing should be provided on the Gemini 8m Telescopes, with procedures suitable for fast on-line data preprocessing. A prerequisite for this is that acquired data are made available as directly as possible in a common format, and that all additional data related to an exposure and logging information are made available on-line at the same time.
40.Quick-look should be usable within exposure sequences to provide results and feedback parameters to the control software in a programmed way, without the need for manual intervention. This document does not try to be specific about the requirements for Quick-look other than that This document should be synchronous.
41.Near-line processing should be available for simple data reductions required for data integrity validation ( remove instrument and observatory effects so the observer can make decisions about further observing actions). This data reduction proceeds sequentially through requests, but asynchronously from data acquisition. In particular, data acquisition takes precedence over near-line data reduction.
42.Off-line pixel processing for full data reduction should also exist at the Gemini 8m Telescopes site, but does not have any interface to the Gemini 8m Telescopes software.
The Astronomical communities have made considerable investments in image processing software, and therefore, compatibility with and adaptations to these packages must be sought.
43.It should also be noted that some Gemini 8m Telescopes subsystems, such as adaptive optics, may require some Gemini 8m Telescopes subsystems, such as adaptive optics own special on-line pixel processing software, which is better defined in the requirements for some Gemini 8m Telescopes subsystems, such as adaptive optics. This is largely due to the difficulty of applying on-line the same algorithms used for full off-line reductions — in general due to the time critical nature of the image processing needs.
44.The same situation might also occur with other instruments, where specific observer support software has to be foreseen for on-line use.
45.In all these cases the specific on-line (quick-look) software development shall be seen as a subset of the development for the off-line data reduction system, to avoid as far as possible duplication of development effort.
46.The output format of the Gemini 8m Telescopes data must be compatible with the GEMINI archive requirements.
47.As comparisons with previous data might be of great value and affect the actual observing program, on-line interactive access to the data archiving system should exist, so that access to this database is possible for Gemini 8m Telescopes users.
48.The specific types of data available; flat fields, calibrations, science exposures, ; the amount of a specific exposure available; header only, averaged exposure, complete raw data set; and the time frame within which such data will be made available; same night, weekly, after proprietary period; will be established by the Gemini Archiving Requirements.
49.Computer access to star catalogues is also required, so that an automatic selection of candidate guide and standard stars can be made.
50.The Gemini 8m Telescopes software must be able to interface with all commercial software packages available on the Gemini 8m Telescopes and integrated into the Gemini 8m Telescopes operation.
51.A relevant example of such a package is a general database management system (DBMS), where operational information such as schedules, logs, problem reports and maintenance information related to various pieces of equipment should be kept.
52.The LAN shall support the majority of the Gemini 8m Telescopes system internal communication needs.
LAN must be capable of dealing both with the data bandwidths required (at peak and on average) and with the required response times and synchronization needs.
LAN shall be supplemented with a Local Time Bus, for distribution of absolute and relative time signals, and both a digital reflective memory bus and an analog event-based bus, for distribution of signals with requirements not satisfied by LAN.
53.Local coordination and synchronization needs within a subsystem (for example, coordination of active support system for primary mirror, bi-directional traffic of commands/replies). This layer could be considered as internal to a given subsystem or instrument, but as more than one subsystem might need This layer, one should aim for a unique solution at the hardware and software level.
54.Access from Wide Area Network (WAN) for remote diagnostics and monitoring from operations facilities (Bi-directional traffic).
55.No distinction is made here between WAN and point to point links as there shall be no difference in the software between the two cases. However the system architecture will be designed so as to minimize the communication load placed on peer and higher level networks.
56.To eliminate conceptual access problems, while coping with different bandwidths, LAN and WAN interfaces shall be homogeneous and shall be based on standards which allow migration on different media, should LAN and WAN interfaces become required during the Gemini 8m Telescopes project life.
57.For maintenance reasons and hardware independence, a clear hierarchical model must be implemented, supporting separation of logical and physical layers,  ISO/OSI model. It is recognized that this hierarchy may need to be violated for (in general) performance reasons. This results in point-to-point connections between peer systems or direct connections bypassing the hierarchy.
58.Network redundancy should also be considered in the design phase as a way to increase reliability and security, in particular for control information.
59.Due to the uncertain future of the Internet, only non-essential tasks may employ it.
All essential tasks, not including remote observing, must take place on resources controlled by the project (such as leased lines).
60.Peer-to-peer connectivity should only be used to overcome a demonstrated performance problem.
61.Bypassing the hierarchy (connected between grandmother and granddaughter with no path through the mother) should only be used for transmission of status information or bulk data, not control flow.
62.It is envisaged that observing astronomers who have travelled to the Gemini 8m Telescopes site will make use of the Gemini 8m Telescopes control room facilities. This will allow centralized support and coordination of This operations, providing This operations support for individual instruments and supervision for all of This.
63.However, even at the Gemini 8m Telescopes site there will be users ( software development and maintenance staff) installing or enhancing other parts of the system, possibly working directly at the telescope.
64.Finally, in the case of remote operations, other users ( support staff) might be on Cerro Tololo or in Hilo.
65.To allow coordination both locally at the Gemini 8m Telescopes site between the various users and with remote users, the software shall support access to the system from any user station.
the software will then be an operational decision, implying privileges and priorities for the various categories of users, and definition of what a given user can actually do.
66.Access from any user station will make user stations in principle identical and software configurable as the user station of this or that subsystem. This should greatly simplify the coordination problem posed by the large number of simultaneous users (as already described in the Capacity requirements, Section).
67.Whether the software is table driven, message driven, or a combination of both is a function of the individual work packages and defined in the appropriate work package description.
68.Changing system constants, such as arcseconds/bit for an encoder, shall not require recompiling but will be updated as part of system startup, and, for some constants, will be modifiable during operation.
System status parameters will be maintained to an extent that will allow restarting the system and regaining the previous state.
The extent of duplication of the previous state will be dictated by safety and practical considerations.
69.Strict checking should be applied on this to preserve maintainability and reconfiguration of the system.
70.Reliability is defined as 'The duration or probability of failure-free performance under state conditions' or 'The probability that an item can perform an item intended function for a specified interval under stated conditions'. The [GSR] sets as a requirement 2% and a goal 1% for total system (mechanical, electrical, and software) downtime due to failures - this translates to a maximum of 15 minutes per night or 1 night per month of downtime. This in turn sets quite stringent requirements on both MTBF and MTTR for the software and controls.
71.To guarantee maximum availability of the control system, retry procedures must be embodied in the software in case of error or failure ( time-out, hardware failure) to achieve recovery on-line whenever possible.
72.Should recovery also fail, the error or failure has to be reported in a clear form (to identify the cause of the problem) and the system shall put the system into a safe state, whenever a safety aspect might be involved.
73.To avoid unnecessary downtime, it must be possible for the system to reconfigure the system in order to continue observing, in a different mode if required, given the failure of a single non-critical subsystem.
74.To increase software robustness, range checking and validity checking shall be supported before execution of any input command. This must be possible ahead of time, preparing observing sequences for automatic observations and simulating observations to estimate results.
75.On-line pre-checking of the operational status of equipment should be done prior to sending critical or time consuming commands. It must be possible to apply continuous monitoring to all subsystems on request, both when in operation and when idle, to check both operational status.
76.A measure of fault rates should be done during commissioning to establish baseline rates for system reliability monitoring.
77.There are to be recovery procedures to restart after error failure.
78.The system should be constantly monitoring active subsystems to be sure active subsystems are operating correctly before sending command to each subsystem. This monitoring should continue on inactive subsystems.
79.The goal for recover and/or reconfiguration is 5 minutes from onset of the error condition to observing again.
80. Maintenance requirements including an estimate of required resources.
81. The method of upgrading the system to add capabilities and performance.
Areas where upgrades are anticipated should be identified with an estimate of the required effort and resources.
82.These issues will be addressed in the context of the mountain environment where the system will be operating. The plan will be delivered with the system.
83.Maintenance of commercial software (Solaris, VxWorks) used by this work package is the responsibility of the WPR and the maintenance costs are not covered by the work package budget.
84.Community software support (EPICS) is available nominally free-of-charge through the normal release and bug-fix procedures used in the community.
85.All subsystem software is to include modules to aid in the maintenance and testing of the subsystem. For example, each subsystem is to include a simulator that provides a reference behavior for the subsystem.
Simple mechanisms should exist for replacing a subsystem with a subsystem simulation.
86. Monitor level. Each subsystem should have a background task running whenever Each subsystem is operational, performing such tasks as checking power supply levels, temperatures, performance, correct responses to commands. The OCS is to be notified of any detected problems.
87. Self-test level. Each subsystem should provide a module for fully exercising all subsystem components, both hardware and software. a module is executed automatically during start-up and on demand through the defined interface. Problems are to be automatically reported to the OCS via the defined interface.
88. System level. There are also software modules for testing the subsystem as an integrated portion of the entire system. software modules for testing the subsystem as an integrated portion of the entire system would be executed on demand during maintenance operation level.
89.The Gemini system must be self-monitoring to invoke safety monitoring to prevent risk to people or damage to equipment.
The software should be able to quickly bring Gemini system to a safe state upon notification of such danger. Subsystems must be able to detect such danger and report such danger appropriately. In the event that the risk persists, subsystems must be able to move subsystems into safe states to protect people and equipment ( if there is a failure in the higher-level systems).
90.Safety protection must be applied whenever there is the risk that the actions of the control software could endanger people or cause damage to any Gemini 8m Telescopes subsystem, for example, by driving beyond limits or by overexposing detectors. This protection, where implemented, must be independent of the control software. In general this will require mechanical hard stops, electrical interlocks, electrical hard limit switches, soft limit switches, software limits, and watch dogs.
91.The Gemini 8m Telescopes software shall be able to bring the Gemini 8m Telescopes system quickly to a safe state upon detection of danger. Safety aspects shall be analyzed during the functional specification phase of the software.
92.Security must be provided in order to both prevent accidental mix-up of commands from different users on different parts of the system and to prevent intrusion from the wide area network into the Gemini 8m Telescopes.
In particular, the astronomical database must be protected from intrusion, whether the purpose is to access private data or to be destructive. It is acceptable, and may well prove to be the best solution, to provide intrusion security by a well designed network gateway acting as a firewall.
93.A system that is operating in Engineering/Maintenance mode must ignore directives from other systems, though status information should still be provided for use by other systems.
There should be security preventing the intrusion into the system by unauthorized users, or users at unauthorized access levels.
94.All systems are appropriately interlocked. This interlock must not depend on any software for reliable operation. Details of the interlock system are found in the Mount Control System Work Package Definition.
95.Testability: A design characteristic which allows the status of a unit to be confidently determined in a timely fashion.
96.Built-in-test: An integral capability of the mission equipment which provides an onboard, automated test capability to detect, diagnose, or isolate system failures.
The fault detection and, possibly, isolation capability is used for periodic or continuous monitoring of a system's operational health, and for observation and, possibly, diagnosis as a prelude to maintenance action.
97.Since the Gemini software will be developed in stages over a period of years, and since computer technology is expected to evolve rapidly over this same period, the Gemini software is to be designed to be easily extended and upgraded with modifications to non-changing components. The software itself, the Gemini software installation process, and the Gemini software documentation must be developed with this expandability in mind, using general industry standards.
98.All software is to be developed using typical modularization and standardization techniques.
In particular, each module's environment is strictly defined by each module's environment interface to other components. No module can rely upon information outside of its interface to other components.
Module selection should be done in logical fashion to minimize the size of the interfaces between modules.
99.The on-line databases can be considered part of this interface, but are only accessible through their defined interfaces.
100.The software must be strictly modular,  the functionality of a subsystem should correspond to that which belongs to a subsystem and only to that, so that software for different subsystems can be installed and maintained independently of all the rest.
101.This is needed in particular for multi-instrument operation, for example, as instruments share the same subsystems on the telescope.
102.It also important that there are no undesired interactions between subsystems. This may be enforced either at the client/server interface or at the message system level.
103.Test procedure methods have to be defined in the Software Test Plan (STP), while test plans shall be written for all individual software packages and modules comprising the Gemini 8m Telescopes software.
104.Apart from the component and integration test procedures, a formal release system should exist at package and module level, which should be checkable on-line by the operational procedures for consistency. Every system must thus be able to supply Every system current version upon request.
105. A fundamental criteria of Gemini telescope operation is that Gemini support a full implementation of remote operations. This includes remote observing, remote control of telescope, enclosure, and instruments, multipoint monitoring, remote monitoring, remote access for testing, development, diagnostics, and maintenance.
106. It is expected that all operational capability found in on site operations is extended to remote operations, with some degradation in performance resulting from WAN bandwidth considerations. This means the video data signals must be encoded digitally and transferred via WAN to remote sites.
107. One criteria is that sufficient information be recorded during an observation to recreate the sequence of events that occurred during the observation. This requires that all input and output data be logged appropriately.
108. Given an initial set of configuration parameters, the Gemini system operates via a sequence of commands. This operation is complemented by using previously stored data, calibrations, and star catalogs
109. The Experimental Physics and Industrial Control System (EPICS) toolkit is the foundation of the Gemini control system. EPICS was originally developed at the Los Alamos and Argonne National Laboratories for use in large accelerator control and diagnostics systems. It is now an established standard within the international High Energy Physics community and is gaining acceptance amongst astronomical sites.
110. Within the EPICS community there is understood to be an informal distinction between two classes of developers, labeled 'Internals' and 'Applications'. Although these definitions are nowhere written down, this understanding serves as the basis for many discussions with the community and for the nature of training classes.
111. The heart of an IOC is a memory resident database together with various memory resident structures describing the contents of the database.
EPICS supports a large and extensible set of record types,  ai (Analog Input), ao (Analog Output),
112. Each record type has a fixed set of fields. Some fields are common to all record types and others are specific to particular record types.
Every record has a record name and every field has a field name.
The first field of every database record holds the record name, which must be unique across all IOCs attached to the same TCP/IP subnet.
113. A number of data structures are provided so that the database can be accessed efficiently.
Most software components, because Most software components access the database via database access routines, do not need to be aware of data structures.
114. In order to remove record specific knowledge from database access, each record type have an associated record support module.
Similarly, in order to remove device specific knowledge from record support, each record type can have a set of device support modules.
If the method of accessing hardware is complicated, a device driver can be provided to shield the device support modules.
Many record types, in particular all types not associated with hardware, do not have device support or drivers.
115. The IOC software is designed so that the database access layer knows nothing about the record support layer other than how to call The IOC software. The record support layer in turn knows nothing about The record support layer's device support layer other than how to call The record support layer. Similarly the only thing a device support layer knows about Similarly the only thing's associated driver is how to call Similarly the only thing. This design allows a particular installation and even a particular IOC within an installation to choose the set of record types, device types, and drivers This design wishes to use. The remainder of The IOC software is unaffected.
116. Every record support module must provide a record processing routine. It is this routine that is called by the database scanners. Record processing consists of some combination of a standard set of functions.
117. The routines described in this section provide a callback mechanism for database value changes. This allows the caller to be notified when database values change without constantly polling the database.
A mask can be set to specify value changes, alarm state changes, and/or archive changes.
118. Channel access provides network transparent access to IOC databases. Channel access is based on a client-server model. Each IOC provides a channel access server which is willing to establish communication with an arbitrary number of clients. Channel access client services are available on both OPIs and IOCs. A client can communicate with an arbitrary number of servers.
